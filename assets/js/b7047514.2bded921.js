"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[59892],{48908:(e,t,n)=>{n.d(t,{ZP:()=>l});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={toc:[]};function l(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},s,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can use the following auth provider examples as a starting point for your own auth provider or you can use them as it is. Check the links below to see the details of each example."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/authentication/headless/"},"Basic")," - A basic auth provider example."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/enterprise-edition/okta"},"Okta")," - Okta, the enterprise-grade identity management service."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/auth-provider/keycloak"},"Keycloak")," - An auth provider example with Keycloak."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/auth-provider/auth0"},"Auth0")," - An auth provider example with Auth0."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/auth-provider/google-auth"},"Google Auth")," - An auth provider example with Google Auth."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/auth-provider/otpLogin"},"OTP Login")," - An auth provider example with OTP Login."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/data-provider/appwrite"},"Appwrite")," - An auth provider example with Appwrite."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/data-provider/supabase"},"Supabase")," - An auth provider example with Supabase."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/data-provider/strapi-v4"},"Strapi")," - An auth provider example with Strapi."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/data-provider/strapi-graphql"},"Strapi Graphql")," - An auth provider example with Strapi Graphql."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/data-provider/nhost"},"Nhost")," - An auth provider example with Nhost."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/next-js/"},"Basic with Nextjs")," - A basic auth provider example with Nextjs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/remix/remix-headless"},"Basic with Remix")," - A basic auth provider example with Remix."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/examples/auth-provider/kinde"},"Kinde")," - An auth provider example with Kinde.")))}l.isMDXComponent=!0},58943:(e,t,n)=>{n.d(t,{x:()=>m});var r=n(86010),o=n(67294),a=n(73808),i=n(96319),s=n(79526);const l=({horizontalSize:e,onMouseDown:t})=>o.createElement("div",{className:(0,r.Z)("resize-handler","hidden","md:block","absolute","z-[3]","top-0","bottom-0","w-2.5","cursor-ew-resize"),"data-direction":"horizontal",onMouseDown:t,style:{left:`calc(${e}% - 5px)`}});function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){u(e,t,n[t])}))}return e}function c(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const m=e=>{var t;return"nextjs"===(null===(t=e)||void 0===t?void 0:t.template)?o.createElement(f,e):o.createElement(h,e)},h=e=>{var t,n,u,m,h,f,g,v,y,k,w,b,P,N,x,{startRoute:R,showNavigator:O,showLineNumbers:A,showOpenInCodeSandbox:E,initialPercentage:T=50,dependencies:C,options:j={showTabs:!0,initMode:"lazy",classes:{"sp-cm":"p-0 bg-transparent"}},template:L="react-ts",customSetup:I,files:S,previewOnly:D,layout:B,height:M=420,wrapperClassName:U,className:H,showFiles:F=!1,showConsole:G=!1,hidePreview:z=!1}=e,W=p(e,["startRoute","showNavigator","showLineNumbers","showOpenInCodeSandbox","initialPercentage","dependencies","options","template","customSetup","files","previewOnly","layout","height","wrapperClassName","className","showFiles","showConsole","hidePreview"]);const{colorMode:q}=(0,s.I)();var V,X;null!=j||(j={}),null!==(V=(N=j).resizablePanels)&&void 0!==V||(N.resizablePanels=!0),null!==(X=(x=j).editorWidthPercentage)&&void 0!==X||(x.editorWidthPercentage=null!=T?T:50);const Y={showTabs:j.showTabs,showLineNumbers:j.showLineNumbers,showInlineErrors:j.showInlineErrors,wrapContent:j.wrapContent,closableTabs:j.closableTabs,initMode:j.initMode,extensions:null===(t=j.codeEditor)||void 0===t?void 0:t.extensions,extensionsKeymap:null===(n=j.codeEditor)||void 0===n?void 0:n.extensionsKeymap,readOnly:j.readOnly,showReadOnly:j.showReadOnly,additionalLanguages:null===(u=j.codeEditor)||void 0===u?void 0:u.additionalLanguages},Z={activeFile:j.activeFile,visibleFiles:j.visibleFiles,recompileMode:j.recompileMode,recompileDelay:j.recompileDelay,autorun:j.autorun,autoReload:j.autoReload,bundlerURL:j.bundlerURL,startRoute:j.startRoute,skipEval:j.skipEval,fileResolver:j.fileResolver,initMode:j.initMode,initModeObserverOptions:j.initModeObserverOptions,externalResources:j.externalResources,logLevel:j.logLevel,classes:j.classes},[K,J]=o.useState(!1),{onHandleMouseDown:$,horizontalSize:_}=(({initialSize:e=50})=>{const[t,n]=o.useState(e),r=o.useRef(null),a=e=>{if(!r.current)return;const t=r.current.parentElement;if(!t)return;const{left:o,width:a}=t.getBoundingClientRect(),i=(e.clientX-o)/a*100,s=Math.min(Math.max(i,25),75);n(s),t.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents="none"}))},i=()=>{var e;const t=null===(e=r.current)||void 0===e?void 0:e.parentElement;t&&(t.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents=""})),r.current=null)};return o.useEffect((()=>(document.body.addEventListener("mousemove",a),document.body.addEventListener("mouseup",i),()=>{document.body.removeEventListener("mousemove",a),document.body.removeEventListener("mouseup",i)})),[]),{horizontalSize:t,onHandleMouseDown:o.useCallback((e=>{r.current=e.target}),[])}})({initialSize:j.editorWidthPercentage}),Q=!D&&!(null===(h=B)||void 0===h||null===(m=h.includes)||void 0===m?void 0:m.call(h,"col"));var ee,te,ne,re,oe,ae;return o.createElement(o.Fragment,null,o.createElement("div",{className:(0,r.Z)("pb-6",U)},o.createElement("div",{className:(0,r.Z)("absolute","left-0","right-0","w-full","px-2","md:px-4","xl:px-6","max-w-screen-xl","mx-auto",H)},o.createElement(i.oT,d({key:L,customSetup:d({dependencies:C},I),files:S,options:Z,template:L,theme:"light"===q?c(d({},i.dN),{colors:c(d({},i.dN.colors),{surface1:"#F4F8FB",surface2:"rgb(222, 229, 237)",surface3:"rgb(222, 229, 237)"})}):c(d({},a.I2),{colors:c(d({},a.I2.colors),{surface1:"#1D1E30",surface2:"#303450",surface3:"#303450"})}),className:(0,r.Z)("not-prose sandpack-container","max-w-screen-xl")},W),o.createElement(i.sp,{className:(0,r.Z)("col"===B&&"!flex-col","col-reverse"===B&&"!flex-col-reverse")},F&&o.createElement(i.Lj,{autoHiddenFiles:!0,style:{height:null!==(ee=j.editorHeight)&&void 0!==ee?ee:M}}),!D&&o.createElement(i._V,c(d({},Y),{showLineNumbers:A,closableTabs:F,initMode:"lazy",style:c(d({height:null!==(te=j.editorHeight)&&void 0!==te?te:M},(null===(g=B)||void 0===g||null===(f=g.includes)||void 0===f?void 0:f.call(g,"col"))?{flex:"initial"}:{flexGrow:_,flexShrink:_,flexBasis:0}),{overflow:"hidden"})})),G?o.createElement(i.Tq,{style:c(d({height:null!==(ne=j.editorHeight)&&void 0!==ne?ne:M},(null===(y=B)||void 0===y||null===(v=y.includes)||void 0===v?void 0:v.call(y,"col"))?{flex:"initial"}:{flexGrow:_,flexShrink:_,flexBasis:0}),{overflow:"hidden"})}):null,Q?o.createElement(l,{onMouseDown:$,horizontalSize:_}):null,z?null:o.createElement(o.Fragment,null,o.createElement(i.Gj,{showOpenInCodeSandbox:E,startRoute:R,showNavigator:null!=O?O:j.showNavigator,showRefreshButton:j.showRefreshButton,style:c(d({display:z?"none":"flex"},(null===(w=B)||void 0===w||null===(k=w.includes)||void 0===k?void 0:k.call(w,"col"))?{flex:"initial",width:"100%"}:{flexGrow:100-_,flexShrink:100-_,flexBasis:0,width:D?"100%":100-_+"%"}),{gap:0,height:null!==(re=j.editorHeight)&&void 0!==re?re:M})},o.createElement("div",{className:"sp-custom-loading"},o.createElement("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/spinner.gif",className:(0,r.Z)("w-12","h-12","rounded-full")}))))))),o.createElement("div",{className:(0,r.Z)(""),style:{height:Number(null!==(oe=j.editorHeight)&&void 0!==oe?oe:M)+2}}),o.createElement("div",{className:(0,r.Z)((null===(P=B)||void 0===P||null===(b=P.includes)||void 0===b?void 0:b.call(P,"col"))?"block":"block md:hidden"),style:{height:Number(null!==(ae=j.editorHeight)&&void 0!==ae?ae:M)+2}})),o.createElement("section",{className:"hidden max-w-0 max-h-0"},o.createElement("p",null,`Dependencies: ${Object.keys(null!=C?C:{}).map((e=>`${e}@${C[e]}`))}`),o.createElement("h3",null,"Code Files"),Object.keys(null!=S?S:{}).map((e=>o.createElement("div",{key:e},o.createElement("div",null,`File: ${e}`),o.createElement("div",null,`Content: ${"code"in S[e]?S[e].code:S[e]}`))))))},f=e=>{const t={hidePreview:!0};return o.createElement(h,c(d({},e,t),{template:"react-ts"}))};'\nimport { NavigateToResource } from "@refinedev/nextjs-router";\n\nconst Home = () => {\n    return <NavigateToResource resource="products" />;\n};\n\nexport default Home;\n'.trim()},52798:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>c});n(67294);var r=n(3905);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={},l=void 0,u={unversionedId:"guides-concepts/authentication/auth-provider-interface",id:"guides-concepts/authentication/auth-provider-interface",title:"auth-provider-interface",description:"",source:"@site/docs/guides-concepts/authentication/auth-provider-interface.md",sourceDirName:"guides-concepts/authentication",slug:"/guides-concepts/authentication/auth-provider-interface",permalink:"/docs/guides-concepts/authentication/auth-provider-interface",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/guides-concepts/authentication/auth-provider-interface.md",tags:[],version:"current",lastUpdatedBy:"Batuhan Wilhelm",lastUpdatedAt:1702886435,formattedLastUpdatedAt:"Dec 18, 2023",frontMatter:{}},d={},c=[],p={toc:c};function m(e){var{components:t}=e,n=i(e,["components"]);return(0,r.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},p,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Refine, AuthBindings } from "@refinedev/core";\n\nconst authProvider: AuthBindings = {\n  register: async (params) => {\n    if (params.email === authCredentials.email && params.password) {\n      localStorage.setItem("email", params.email);\n      return {\n        success: true,\n        redirectTo: "/",\n      };\n    }\n    return {\n      success: false,\n      error: {\n        message: "Register failed",\n        name: "Invalid email or password",\n      },\n    };\n  },\n  login: async ({ providerName, email }) => {\n    if (providerName === "google") {\n      window.location.href = "https://accounts.google.com/o/oauth2/v2/auth";\n      return {\n        success: true,\n      };\n    }\n\n    if (providerName === "github") {\n      window.location.href = "https://github.com/login/oauth/authorize";\n      return {\n        success: true,\n      };\n    }\n\n    if (email === authCredentials.email) {\n      localStorage.setItem("email", email);\n      return {\n        success: true,\n        redirectTo: "/",\n      };\n    }\n\n    return {\n      success: false,\n      error: {\n        message: "Login failed",\n        name: "Invalid email or password",\n      },\n    };\n  },\n  check: async () => {\n    return localStorage.getItem("email")\n      ? {\n          authenticated: true,\n        }\n      : {\n          authenticated: false,\n          error: {\n            message: "Check failed",\n            name: "Not authenticated",\n          },\n          logout: true,\n          redirectTo: "/login",\n        };\n  },\n  logout: async () => {\n    localStorage.removeItem("email");\n    return {\n      success: true,\n      redirectTo: "/login",\n    };\n  },\n  onError: async (error) => {\n    console.error(error);\n    return { error };\n  },\n  getIdentity: async () => ({\n    id: 1,\n    name: "Jane Doe",\n    avatar: "https://unsplash.com/photos/IWLOvomUmWU/download?force=true&w=640",\n  }),\n  updatePassword: async (params) => {\n    if (params.password === authCredentials.password) {\n      //we can update password here\n      return {\n        success: true,\n      };\n    }\n    return {\n      success: false,\n      error: {\n        message: "Update password failed",\n        name: "Invalid password",\n      },\n    };\n  },\n  forgotPassword: async (params) => {\n    if (params.email === authCredentials.email) {\n      //we can send email with reset password link here\n      return {\n        success: true,\n      };\n    }\n    return {\n      success: false,\n      error: {\n        message: "Forgot password failed",\n        name: "Invalid email",\n      },\n    };\n  },\n  getPermissions: async () => ["admin"],\n};\n')))}m.isMDXComponent=!0},45272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>J,contentTitle:()=>Z,default:()=>re,frontMatter:()=>Y,metadata:()=>K,toc:()=>$});var r=n(67294),o=n(3905),a=n(58943);function i(){return r.createElement(a.x,{dependencies:{"@refinedev/core":"latest",axios:"^1.6.2"},startRoute:"/",files:{"/App.tsx":{code:s,hidden:!1},"/register-page.tsx":{code:d,hidden:!1,active:!0},"/auth-provider.ts":{code:l,hidden:!1},"/data-provider.ts":{code:u,hidden:!0}}})}const s='\nimport React from "react";\nimport { Refine } from "@refinedev/core";\n\nimport { RegisterPage } from "./register-page.tsx";\nimport { dataProvider } from "./data-provider.ts";\nimport { authProvider } from "./auth-provider.ts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\n\nexport default function App() {\n    return (\n        <Refine\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            authProvider={authProvider}\n        >\n            <RegisterPage />\n        </Refine>\n    );\n}\n\n'.trim(),l='\nimport React from "react";\nimport { AuthBindings } from "@refinedev/core";\n\nexport const authProvider: AuthBindings = {\n    register: async ({ email }) => {\n        // to keep the example short and simple, we didn\'t send a request, and we save the token in localStorage.\n        // in real world, you should send a request and token should be saved in more secure place.\n        localStorage.setItem("token", email);\n        alert("You have successfully registered!");\n\n        return {\n            success: true,\n        };\n    },\n    login: async () => {\n        throw new Error("Not implemented");\n    },\n    logout: async () => {\n        throw new Error("Not implemented");\n    },\n    check: async () => {\n        throw new Error("Not implemented");\n    },\n    onError: async () => {\n        throw new Error("Not implemented");\n    },\n};\n'.trim(),u='\nimport React from "react";\nimport { DataProvider } from "@refinedev/core";\n\nexport const dataProvider = (url: string): DataProvider => ({\n    getList: async () => {\n        throw new Error("Not implemented");\n    },\n    getOne: async () => {\n        throw new Error("Not implemented");\n    },\n    create: async () => {\n        throw new Error("Not implemented");\n    },\n    update: async () => {\n        throw new Error("Not implemented");\n    },\n    deleteOne: async () => {\n        throw new Error("Not implemented");\n    },\n    getApiUrl: () => url,\n});\n\n'.trim(),d='\nimport React from "react";\nimport { useRegister } from "@refinedev/core";\n\nexport const RegisterPage = () => {\n    const { mutate: register } = useRegister();\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        // get form data\n        const formData = Object.fromEntries(\n            new FormData(e.currentTarget).entries(),\n        );\n\n        // call register mutation\n        register(formData);\n\n        // reset form data\n        e.currentTarget.reset();\n    };\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <input\n                    type="email"\n                    placeholder="email"\n                />\n                <button type="submit">Submit</button>\n            </form>\n        </div>\n    );\n};\n\n'.trim();function c(){return r.createElement(a.x,{dependencies:{"@refinedev/core":"latest",axios:"^1.6.2"},startRoute:"/",files:{"/App.tsx":{code:p,hidden:!1},"/login-page.tsx":{code:f,hidden:!1,active:!0},"/auth-provider.ts":{code:m,hidden:!1},"/data-provider.ts":{code:h,hidden:!0}}})}const p='\nimport React from "react";\nimport { Refine } from "@refinedev/core";\n\nimport { LoginPage } from "./login-page.tsx";\nimport { dataProvider } from "./data-provider.ts";\nimport { authProvider } from "./auth-provider.ts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\n\nexport default function App() {\n    return (\n        <Refine\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            authProvider={authProvider}\n        >\n            <LoginPage />\n        </Refine>\n    );\n}\n\n'.trim(),m='\nimport React from "react";\nimport { AuthBindings } from "@refinedev/core";\n\nexport const authProvider: AuthBindings = {\n    login: async ({ email }) => {\n        // to keep the example short and simple, we didn\'t send a request, and we save the token in localStorage.\n        // in real world, you should send a request and token should be saved in more secure place.\n        localStorage.setItem("token", email);\n        alert("You are logged in!");\n\n        return {\n            success: true,\n        };\n        throw new Error("Not implemented");\n    },\n    register: async () => {\n        throw new Error("Not implemented");\n    },\n    logout: async () => {\n        throw new Error("Not implemented");\n    },\n    check: async () => {\n        throw new Error("Not implemented");\n    },\n    onError: async () => {\n        throw new Error("Not implemented");\n    },\n};\n'.trim(),h='\nimport React from "react";\nimport { DataProvider } from "@refinedev/core";\n\nexport const dataProvider = (url: string): DataProvider => ({\n    getList: async () => {\n        throw new Error("Not implemented");\n    },\n    getOne: async () => {\n        throw new Error("Not implemented");\n    },\n    create: async () => {\n        throw new Error("Not implemented");\n    },\n    update: async () => {\n        throw new Error("Not implemented");\n    },\n    deleteOne: async () => {\n        throw new Error("Not implemented");\n    },\n    getApiUrl: () => url,\n});\n\n'.trim(),f='\nimport React from "react";\nimport { useLogin } from "@refinedev/core";\n\nexport const LoginPage = () => {\n    const { mutate: login } = useLogin();\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        // get form data\n        const formData = Object.fromEntries(\n            new FormData(e.currentTarget).entries(),\n        );\n\n        // call login mutation\n        login(formData);\n\n        // reset form data\n        e.currentTarget.reset();\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <input type="email" placeholder="email" />\n                <button type="submit">Submit</button>\n            </form>\n        </div>\n    );\n};\n'.trim();function g(){return r.createElement(a.x,{dependencies:{"@refinedev/core":"latest",axios:"^1.6.2"},startRoute:"/",files:{"/App.tsx":{code:v,hidden:!1},"/home-page.tsx":{code:b,hidden:!1,active:!0},"/login-page.tsx":{code:w,hidden:!1,active:!0},"/auth-provider.ts":{code:y,hidden:!1},"/data-provider.ts":{code:k,hidden:!0}}})}const v='\nimport React from "react";\nimport { Refine } from "@refinedev/core";\n\nimport { HomePage } from "./home-page.tsx";\nimport { dataProvider } from "./data-provider.ts";\nimport { authProvider } from "./auth-provider.ts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\n\nexport default function App() {\n    return (\n        <Refine\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            authProvider={authProvider}\n        >\n            <HomePage />\n        </Refine>\n    );\n}\n\n'.trim(),y='\nimport React from "react";\nimport { AuthBindings } from "@refinedev/core";\n\n\n// to keep the example short and simple, we didn\'t send a request, and we save the token in localStorage.\n// in real world, you should send a request and token should be saved in more secure place.\nexport const authProvider: AuthBindings = {\n    login: async ({ email }) => {\n        localStorage.setItem("email", email);\n\n        return {\n            success: true,\n        };\n    },\n    check: async () => {\n        const email = localStorage.getItem("email");\n        if (!email) {\n            return {\n                authenticated: false,\n            };\n        }\n\n        return {\n            authenticated: true,\n        };\n    },\n    logout: async () => {\n        localStorage.removeItem("email");\n        return {\n            success: true,\n        };\n    },\n    getIdentity: async () => {\n        const email = localStorage.getItem("email");\n        return {\n            email,\n        };\n    },\n    register: async () => {\n        throw new Error("Not implemented");\n    },\n    onError: async () => {\n        throw new Error("Not implemented");\n    },\n};\n'.trim(),k='\nimport React from "react";\nimport { DataProvider } from "@refinedev/core";\n\nexport const dataProvider = (url: string): DataProvider => ({\n    getList: async () => {\n        throw new Error("Not implemented");\n    },\n    getOne: async () => {\n        throw new Error("Not implemented");\n    },\n    create: async () => {\n        throw new Error("Not implemented");\n    },\n    update: async () => {\n        throw new Error("Not implemented");\n    },\n    deleteOne: async () => {\n        throw new Error("Not implemented");\n    },\n    getApiUrl: () => url,\n});\n\n'.trim(),w='\nimport React from "react";\nimport { useLogin } from "@refinedev/core";\n\nexport const LoginPage = () => {\n    const { mutate: login } = useLogin();\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        // get form data\n        const formData = Object.fromEntries(\n            new FormData(e.currentTarget).entries(),\n        );\n\n        // call login mutation\n        login(formData);\n\n        // reset form data\n        e.currentTarget.reset();\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <input type="email" placeholder="email" />\n                <button type="submit">Submit</button>\n            </form>\n        </div>\n    );\n};\n'.trim(),b='\nimport React from "react";\nimport { useIsAuthenticated, useGetIdentity, useLogout } from "@refinedev/core";\nimport { LoginPage } from "./login-page.tsx";\n\nexport const HomePage = () => {\n    const { data: authenticated } = useIsAuthenticated();\n    const { data: identity } = useGetIdentity<{ email: string }>();\n    const { mutate: logout } = useLogout();\n\n    if (authenticated?.authenticated) {\n        return (\n            <div>\n                <h1>Hello,  {identity?.email}</h1>\n                <button onClick={() => logout()}>Logout</button>\n            </div>\n        );\n    }\n\n    return <LoginPage />;\n};\n\n\n'.trim();function P(){return r.createElement(a.x,{dependencies:{"@refinedev/core":"latest",axios:"^1.6.2"},startRoute:"/",files:{"/App.tsx":{code:N,hidden:!1},"/product-page.tsx":{code:O,hidden:!1,active:!0},"/auth-provider.ts":{code:x,hidden:!1},"/data-provider.ts":{code:R,hidden:!1}}})}const N='\nimport React from "react";\nimport { Refine } from "@refinedev/core";\n\nimport { ProductPage } from "./product-page.tsx";\nimport { dataProvider } from "./data-provider.ts";\nimport { authProvider } from "./auth-provider.ts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\n\nexport default function App() {\n    return (\n        <Refine\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            authProvider={authProvider}\n        >\n            <ProductPage />\n        </Refine>\n    );\n}\n\n'.trim(),x='\nimport React from "react";\nimport { AuthBindings } from "@refinedev/core";\n\nexport const authProvider: AuthBindings = {\n    onError: async (error: HttpError) => {\n        // simulating a HTTP error\n        if (error.statusCode === 401) {\n            alert(error.message);\n        }\n\n        return {};\n    },\n    login: async () => {\n        throw new Error("Not implemented");\n    },\n    logout: async () => {\n        throw new Error("Not implemented");\n    },\n    check: async () => {\n        throw new Error("Not implemented");\n    },\n};\n'.trim(),R='\nimport React from "react";\nimport { DataProvider } from "@refinedev/core";\n\nexport const dataProvider = (url: string): DataProvider => ({\n    getOne: async () => {\n        // simulating a HTTP error\n        const error: HttpError = {\n            message: "User is not authenticated",\n            statusCode: 401,\n        };\n        return Promise.reject(error);\n    },\n    getList: async () => {\n        throw new Error("Not implemented");\n    },\n    create: async () => {\n        throw new Error("Not implemented");\n    },\n    update: async () => {\n        throw new Error("Not implemented");\n    },\n    deleteOne: async () => {\n        throw new Error("Not implemented");\n    },\n    getApiUrl: () => url,\n});\n'.trim(),O='\nimport React from "react";\nimport { useOne } from "@refinedev/core";\n\nexport const ProductPage = () => {\n    const { data, refetch } = useOne<Product>({\n        resource: "products",\n        id: "1",\n        queryOptions: {\n            retry: false,\n            enabled: false,\n        },\n    });\n    const product = data?.data;\n\n    return (\n        <div>\n            <h2>Product</h2>\n            <p>name: {product?.name}</p>\n            <button onClick={() => refetch()}>Get Product</button>\n        </div>\n    );\n};\n\ntype Product = {\n    id: string;\n    name: string;\n};\n\n'.trim();var A=n(52798);function E(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function T(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function C(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const j={toc:[]};function L(e){var{components:t}=e,n=C(e,["components"]);return(0,o.kt)("wrapper",T(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){E(e,t,n[t])}))}return e}({},j,n),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Hook"),(0,o.kt)("th",{parentName:"tr",align:null},"Method"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useRegister/"},"useRegister")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"register")),(0,o.kt)("td",{parentName:"tr",align:null},"Register a new user.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useLogin/"},"useLogin")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"login")),(0,o.kt)("td",{parentName:"tr",align:null},"Authenticate and log in a user.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useIsAuthenticated/"},"useIsAuthenticated")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"checkAuth")),(0,o.kt)("td",{parentName:"tr",align:null},"Check if the user is authenticated.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useLogout/"},"useLogout")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"logout")),(0,o.kt)("td",{parentName:"tr",align:null},"Log out the current user.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useOnError/"},"useOnError")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"handleError")),(0,o.kt)("td",{parentName:"tr",align:null},"Handle authentication errors.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useGetIdentity/"},"useGetIdentity")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getIdentity")),(0,o.kt)("td",{parentName:"tr",align:null},"Retrieve the identity of the user.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useUpdatePassword/"},"useUpdatePassword")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"updatePassword")),(0,o.kt)("td",{parentName:"tr",align:null},"Update the user's password.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/useForgotPassword/"},"useForgotPassword")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"forgotPassword")),(0,o.kt)("td",{parentName:"tr",align:null},"Initiate a password reset process.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api-reference/core/hooks/authentication/usePermissions/"},"usePermissions")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"getPermissions")),(0,o.kt)("td",{parentName:"tr",align:null},"Get the permissions of the user.")))))}L.isMDXComponent=!0;var I=n(48908);function S(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","react-router-dom":"latest","react-router":"latest"},startRoute:"/login",files:{"/App.tsx":{code:D}}})}const D='\nimport React from "react";\n\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\nimport { Refine, AuthPage, Authenticated, ErrorComponent } from "@refinedev/core";\nimport routerProvider, {\n  CatchAllNavigate,\n  NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\n\nexport default function App() {\n  return (\n      <BrowserRouter>\n          <Refine\n              routerProvider={routerProvider}\n              dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n              authProvider={{\n                  check: async () => ({\n                      authenticated: false,\n                      redirectTo: "/login",\n                  }),\n                  login: async () => {\n                      return {\n                          success: false,\n                      };\n                  },\n                  logout: async () => {\n                      return {\n                          success: false,\n                      };\n                  },\n                  onError: async () => ({}),\n                  getIdentity: async () => ({\n                      id: 1,\n                      name: "John Doe",\n                      avatar: "https://i.pravatar.cc/300",\n                  }),\n              }}\n              resources={[\n                  {\n                      name: "dashboard",\n                      list: "/",\n                  },\n              ]}\n          >\n              <Routes>\n                  <Route\n                      element={\n                          <Authenticated\n                              fallback={<CatchAllNavigate to="/login" />}\n                          >\n                              <Outlet />\n                          </Authenticated>\n                      }\n                  >\n                      <Route index element={<div>Welcome!</div>} />\n                  </Route>\n                  <Route\n                      element={\n                          <Authenticated\n                              fallback={\n                                  <div\n                                      style={{\n                                          margin: "24px auto",\n                                          maxWidth: "400px",\n                                      }}\n                                  >\n                                      <Outlet />\n                                  </div>\n                              }\n                          >\n                              <NavigateToResource resource="dashboard" />\n                          </Authenticated>\n                      }\n                  >\n                      <Route\n                          path="/login"\n                          element={<AuthPage type="login" />}\n                      />\n                      <Route\n                          path="/register"\n                          element={<AuthPage type="register" />}\n                      />\n                      <Route\n                          path="/forgot-password"\n                          element={<AuthPage type="forgotPassword" />}\n                      />\n                      <Route\n                          path="/update-password"\n                          element={<AuthPage type="updatePassword" />}\n                      />\n                  </Route>\n                  <Route\n                      element={\n                          <Authenticated>\n                              <Outlet />\n                          </Authenticated>\n                      }\n                  >\n                      <Route path="*" element={<ErrorComponent />} />\n                  </Route>\n              </Routes>\n          </Refine>\n      </BrowserRouter>\n  );\n}\n'.trim();function B(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/antd":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","react-router-dom":"latest","react-router":"latest",antd:"^5.0.5"},startRoute:"/login",files:{"/App.tsx":{code:M}}})}const M='\nimport React from "react";\n\nimport "@refinedev/antd/dist/reset.css";\nimport { App as AntdApp, ConfigProvider } from "antd";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/antd";\nimport { Authenticated, Refine } from "@refinedev/core";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <ConfigProvider theme={RefineThemes.Blue}>\n                <AntdApp>\n                    <Refine\n                        routerProvider={routerProvider}\n                        dataProvider={dataProvider(\n                            "https://api.fake-rest.refine.dev",\n                        )}\n                        authProvider={{\n                            check: async () => ({\n                                authenticated: false,\n                                redirectTo: "/login",\n                            }),\n                            login: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            logout: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            onError: async () => ({}),\n                            getIdentity: async () => ({\n                                id: 1,\n                                name: "John Doe",\n                                avatar: "https://i.pravatar.cc/300",\n                            }),\n                        }}\n                        resources={[\n                            {\n                                name: "dashboard",\n                                list: "/",\n                            },\n                        ]}\n                        options={{ syncWithLocation: true }}\n                    >\n                        <Routes>\n                            <Route\n                                element={\n                                    <Authenticated\n                                        fallback={\n                                            <CatchAllNavigate to="/login" />\n                                        }\n                                    >\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route index element={<div>Welcome!</div>} />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated fallback={<Outlet />}>\n                                        <NavigateToResource resource="dashboard" />\n                                    </Authenticated>\n                                }\n                            >\n                                <Route\n                                    path="/login"\n                                    element={\n                                        <AuthPage\n                                            type="login"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/register"\n                                    element={\n                                        <AuthPage\n                                            type="register"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/forgot-password"\n                                    element={\n                                        <AuthPage\n                                            type="forgotPassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/update-password"\n                                    element={\n                                        <AuthPage\n                                            type="updatePassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    paddingTop: 24,\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated>\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route path="*" element={<ErrorComponent />} />\n                            </Route>\n                        </Routes>\n                    </Refine>\n                </AntdApp>\n            </ConfigProvider>\n        </BrowserRouter>\n    );\n}\n'.trim();function U(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/antd":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/mui":"latest","react-router-dom":"latest","react-router":"latest","@emotion/react":"^11.8.2","@emotion/styled":"^11.8.1","@mui/lab":"^5.0.0-alpha.85","@mui/material":"^5.14.2","@mui/x-data-grid":"^6.6.0"},startRoute:"/login",files:{"/App.tsx":{code:H}}})}const H='\nimport React from "react";\n\nimport CssBaseline from "@mui/material/CssBaseline";\nimport GlobalStyles from "@mui/material/GlobalStyles";\nimport { ThemeProvider } from "@mui/material/styles";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport { Authenticated, Refine } from "@refinedev/core";\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/mui";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <ThemeProvider theme={RefineThemes.Blue}>\n                <CssBaseline />\n                <GlobalStyles\n                    styles={{ html: { WebkitFontSmoothing: "auto" } }}\n                />\n                <Refine\n                    routerProvider={routerProvider}\n                    dataProvider={dataProvider(\n                        "https://api.fake-rest.refine.dev",\n                    )}\n                    authProvider={{\n                        check: async () => ({\n                            authenticated: false,\n                            redirectTo: "/login",\n                        }),\n                        login: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        logout: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        onError: async () => ({}),\n                        getIdentity: async () => ({\n                            id: 1,\n                            name: "John Doe",\n                            avatar: "https://i.pravatar.cc/300",\n                        }),\n                    }}\n                    resources={[\n                        {\n                            name: "dashboard",\n                            list: "/",\n                        },\n                    ]}\n                    options={{ syncWithLocation: true }}\n                >\n                    <Routes>\n                        <Route\n                            element={\n                                <Authenticated\n                                    fallback={<CatchAllNavigate to="/login" />}\n                                >\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route\n                                path="/dashboard"\n                                element={<div>Welcome</div>}\n                            />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated fallback={<Outlet />}>\n                                    <NavigateToResource resource="dashboard" />\n                                </Authenticated>\n                            }\n                        >\n                            <Route\n                                path="/login"\n                                element={\n                                    <AuthPage\n                                        type="login"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/register"\n                                element={\n                                    <AuthPage\n                                        type="register"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/forgot-password"\n                                element={\n                                    <AuthPage\n                                        type="forgotPassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/update-password"\n                                element={\n                                    <AuthPage\n                                        type="updatePassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "72px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated>\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route path="*" element={<ErrorComponent />} />\n                        </Route>\n                    </Routes>\n                </Refine>\n            </ThemeProvider>\n        </BrowserRouter>\n    );\n}\n\n'.trim();function F(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/chakra-ui":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/react-table":"latest","react-router-dom":"latest","react-router":"latest","@tabler/icons":"^1.119.0","@chakra-ui/react":"^2.5.1"},startRoute:"/login",files:{"/App.tsx":{code:G}}})}const G='import React from "react";\n\nimport { ChakraProvider } from "@chakra-ui/react";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/chakra-ui";\nimport { Authenticated, Refine } from "@refinedev/core";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <ChakraProvider theme={RefineThemes.Blue}>\n                <Refine\n                    routerProvider={routerProvider}\n                    dataProvider={dataProvider(\n                        "https://api.fake-rest.refine.dev",\n                    )}\n                    authProvider={{\n                        check: async () => ({\n                            authenticated: false,\n                            redirectTo: "/login",\n                        }),\n                        login: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        logout: async () => {\n                            return {\n                                success: false,\n                            };\n                        },\n                        onError: async () => ({}),\n                        getIdentity: async () => ({\n                            id: 1,\n                            name: "John Doe",\n                            avatar: "https://i.pravatar.cc/300",\n                        }),\n                    }}\n                    resources={[\n                        {\n                            name: "dashboard",\n                            list: "/",\n                        },\n                    ]}\n                    options={{ syncWithLocation: true }}\n                >\n                    <Routes>\n                        <Route\n                            element={\n                                <Authenticated\n                                    fallback={<CatchAllNavigate to="/login" />}\n                                >\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route index element={<div>Welcome!</div>} />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated fallback={<Outlet />}>\n                                    <NavigateToResource resource="dashboard" />\n                                </Authenticated>\n                            }\n                        >\n                            <Route\n                                path="/login"\n                                element={\n                                    <AuthPage\n                                        type="login"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/register"\n                                element={\n                                    <AuthPage\n                                        type="register"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/forgot-password"\n                                element={\n                                    <AuthPage\n                                        type="forgotPassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                            <Route\n                                path="/update-password"\n                                element={\n                                    <AuthPage\n                                        type="updatePassword"\n                                        wrapperProps={{\n                                            style: {\n                                                margin: "24px 0px",\n                                                height: "max-content",\n                                            },\n                                        }}\n                                    />\n                                }\n                            />\n                        </Route>\n                        <Route\n                            element={\n                                <Authenticated>\n                                    <ThemedLayoutV2>\n                                        <Outlet />\n                                    </ThemedLayoutV2>\n                                </Authenticated>\n                            }\n                        >\n                            <Route path="*" element={<ErrorComponent />} />\n                        </Route>\n                    </Routes>\n                </Refine>\n            </ChakraProvider>\n        </BrowserRouter>\n    );\n}\n'.trim();function z(){return r.createElement(a.x,{showNavigator:!0,previewOnly:!0,dependencies:{"@refinedev/mantine":"latest","@refinedev/core":"latest","@refinedev/simple-rest":"latest","@refinedev/react-router-v6":"latest","@refinedev/react-table":"latest","react-router-dom":"latest","react-router":"latest","@tabler/icons":"^1.119.0","@emotion/react":"^11.8.2","@mantine/core":"^5.10.4","@mantine/hooks":"^5.10.4","@mantine/notifications":"^5.10.4"},startRoute:"/login",files:{"/App.tsx":{code:W}}})}const W='\nimport React from "react";\n\nimport { Global, MantineProvider } from "@mantine/core";\nimport { NotificationsProvider } from "@mantine/notifications";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport { Authenticated, Refine } from "@refinedev/core";\nimport {\n    AuthPage,\n    ErrorComponent,\n    RefineThemes,\n    ThemedLayoutV2,\n} from "@refinedev/mantine";\nimport routerProvider, {\n    CatchAllNavigate,\n    NavigateToResource,\n} from "@refinedev/react-router-v6";\nimport dataProvider from "@refinedev/simple-rest";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <MantineProvider\n                theme={RefineThemes.Blue}\n                withNormalizeCSS\n                withGlobalStyles\n            >\n                <Global styles={{ body: { WebkitFontSmoothing: "auto" } }} />\n                <NotificationsProvider position="top-right">\n                    <Refine\n                        routerProvider={routerProvider}\n                        dataProvider={dataProvider(\n                            "https://api.fake-rest.refine.dev",\n                        )}\n                        authProvider={{\n                            check: async () => ({\n                                authenticated: false,\n                                redirectTo: "/login",\n                            }),\n                            login: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            logout: async () => {\n                                return {\n                                    success: false,\n                                };\n                            },\n                            onError: async () => ({}),\n                            getIdentity: async () => ({\n                                id: 1,\n                                name: "John Doe",\n                                avatar: "https://i.pravatar.cc/300",\n                            }),\n                        }}\n                        resources={[\n                            {\n                                name: "dashboard",\n                                list: "/",\n                            },\n                        ]}\n                        options={{ syncWithLocation: true }}\n                    >\n                        <Routes>\n                            <Route\n                                element={\n                                    <Authenticated\n                                        fallback={\n                                            <CatchAllNavigate to="/login" />\n                                        }\n                                    >\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route index element={<div>Welcome</div>} />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated fallback={<Outlet />}>\n                                        <NavigateToResource resource="dashboard" />\n                                    </Authenticated>\n                                }\n                            >\n                                <Route\n                                    path="/login"\n                                    element={\n                                        <AuthPage\n                                            type="login"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/register"\n                                    element={\n                                        <AuthPage\n                                            type="register"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/forgot-password"\n                                    element={\n                                        <AuthPage\n                                            type="forgotPassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                                <Route\n                                    path="/update-password"\n                                    element={\n                                        <AuthPage\n                                            type="updatePassword"\n                                            wrapperProps={{\n                                                style: {\n                                                    display: "flex",\n                                                    flexDirection: "column",\n                                                    alignItems: "center",\n                                                    justifyContent: "center",\n                                                    minHeight: "100vh",\n                                                    margin: "24px auto",\n                                                },\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Route>\n                            <Route\n                                element={\n                                    <Authenticated>\n                                        <ThemedLayoutV2>\n                                            <Outlet />\n                                        </ThemedLayoutV2>\n                                    </Authenticated>\n                                }\n                            >\n                                <Route path="*" element={<ErrorComponent />} />\n                            </Route>\n                        </Routes>\n                    </Refine>\n                </NotificationsProvider>\n            </MantineProvider>\n        </BrowserRouter>\n    );\n}\n'.trim();function q(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function V(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function X(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const Y={title:"Authentication"},Z=void 0,K={unversionedId:"guides-concepts/authentication/index",id:"guides-concepts/authentication/index",title:"Authentication",description:"Authentication is the process of verifying the identity of a user or client. It's a critical component of security, ensuring that only authorized users can access certain features or data within the application. Whether you are building a complex enterprise-level application or a simple CRUD interface, Refine's authentication system provides the necessary infrastructure to protect your pages and ensure that users interact with your application in a secure and controlled manner.",source:"@site/docs/guides-concepts/authentication/index.md",sourceDirName:"guides-concepts/authentication",slug:"/guides-concepts/authentication/",permalink:"/docs/guides-concepts/authentication/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/guides-concepts/authentication/index.md",tags:[],version:"current",lastUpdatedBy:"Batuhan Wilhelm",lastUpdatedAt:1702886435,formattedLastUpdatedAt:"Dec 18, 2023",frontMatter:{title:"Authentication"},sidebar:"mainSidebar",previous:{title:"Routing",permalink:"/docs/guides-concepts/routing/"},next:{title:"Authorization",permalink:"/docs/guides-concepts/authorization/"}},J={},$=[{value:"Auth Provider",id:"auth-provider",level:2},{value:"Handling Authentication",id:"handling-authentication",level:2},{value:"Register",id:"register",level:3},{value:"Login",id:"login",level:3},{value:"Checking Authentication",id:"checking-authentication",level:3},{value:'Usage with data provider <GuideBadge id="guides-concepts/data-fetching/" />',id:"usage-with-data-provider-",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"UI Integrations",id:"ui-integrations",level:2},{value:"<code>&lt;AuthPage /&gt;</code>",id:"authpage-",level:3},{value:'Notification <GuideBadge id="api-reference/core/providers/notification-provider" />',id:"notification-",level:3},{value:'Router Integrations <GuideBadge id="guides-concepts/routing/" />',id:"router-integrations-",level:2},{value:"Auth hooks",id:"auth-hooks",level:2},{value:"OAuth Integrations",id:"oauth-integrations",level:2},{value:"Supported Auth Providers",id:"supported-auth-providers",level:2},{value:"<code>authProvider</code> Interface",id:"authprovider-interface",level:2}],_=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},Q=_("GuideBadge"),ee=_("Tabs"),te=_("TabItem"),ne={toc:$};function re(e){var{components:t}=e,n=X(e,["components"]);return(0,o.kt)("wrapper",V(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){q(e,t,n[t])}))}return e}({},ne,n),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Authentication is the process of verifying the identity of a user or client. It's a critical component of security, ensuring that only authorized users can access certain features or data within the application. Whether you are building a complex ",(0,o.kt)("strong",{parentName:"p"},"enterprise-level")," application or a simple CRUD interface, Refine's authentication system provides the necessary infrastructure to protect your pages and ensure that users interact with your application in a secure and controlled manner."),(0,o.kt)("p",null,"Refine's ",(0,o.kt)("strong",{parentName:"p"},"flexible architecture")," allows you to easily implement various authentication strategies:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developers.google.com/identity/protocols/oauth2"},"Google")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://aws.amazon.com/cognito/"},"Amazon Cognito")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.okta.com/"},"Okta")," (Included in ",(0,o.kt)("a",{parentName:"li",href:"/docs/enterprise-edition/okta"},"Refine's Enterprise Edition"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://auth0.com/"},"Auth0"))),(0,o.kt)("p",null,"You can implement your own authentication system or use one of the ",(0,o.kt)("a",{parentName:"p",href:"#supported-auth-providers"},"supported auth providers"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"/docs/tutorial/understanding-authprovider/create-authprovider"},"To learn more about how to create auth provider, check out the tutorial page."))),(0,o.kt)("h2",{id:"auth-provider"},"Auth Provider"),(0,o.kt)("p",null,"Refine handles authentication by ",(0,o.kt)("a",{parentName:"p",href:"#auth-provider"},"Auth Provider")," and consumes the auth provider methods by ",(0,o.kt)("a",{parentName:"p",href:"#auth-hooks"},"auth hooks"),"."),(0,o.kt)("p",null,"Auth provider is an object that contains methods to handles authentication in your app, designed to return promises for use with async methods. By offering a structured architecture it simplifies authentication implementation and management through your app."),(0,o.kt)("p",null,"To activate authentication in your app, you need to pass an ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine />")," as a prop. Once you provide auth provider, you can utilize our auth hooks (useLogin, useRegister, useIsAuthenticated etc.) to easily manage your authentication."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine, AuthBindings } from "@refinedev/core";\n\nexport const authProvider: AuthBindings = {\n  login: async ({ email, password }) => {\n    const { status } = handleLogin(email, password);\n\n    if (status === 200) {\n      return { success: true, redirectTo: "/dashboard" };\n    } else {\n      return {\n        success: false,\n        error: { name: "Login Error", message: "Invalid credentials" },\n      };\n    }\n  },\n  check: async (params) => ({}),\n  logout: async (params) => ({}),\n  onError: async (params) => ({}),\n  register: async (params) => ({}),\n  forgotPassword: async (params) => ({}),\n  updatePassword: async (params) => ({}),\n  getPermissions: async (params) => ({}),\n  getIdentity: async (params) => ({}),\n};\n\nconst App = () => {\n  // highlight-next-line\n  return <Refine authProvider={authProvider}>...</Refine>;\n};\n')),(0,o.kt)("h2",{id:"handling-authentication"},"Handling Authentication"),(0,o.kt)("p",null,"Refine provides a set of hooks to handle authentication. You can use these hooks to manage your authentication process. You can find the ",(0,o.kt)("a",{parentName:"p",href:"#auth-hooks"},"list of hooks")," below."),(0,o.kt)("h3",{id:"register"},"Register"),(0,o.kt)("p",null,"Let's start with registering a new user. To register a new user, we will implement ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.register")," method. We will call this method with ",(0,o.kt)("inlineCode",{parentName:"p"},"useRegister")," hook when the user submits the registration form."),(0,o.kt)(i,{mdxType:"Register"}),(0,o.kt)("h3",{id:"login"},"Login"),(0,o.kt)("p",null,"After registering a new user, we will implement ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.login")," method to login the user. We will call this method with ",(0,o.kt)("inlineCode",{parentName:"p"},"useLogin")," hook when the user submits the login form. This implementation is very similar to the registration process."),(0,o.kt)(c,{mdxType:"Login"}),(0,o.kt)("h3",{id:"checking-authentication"},"Checking Authentication"),(0,o.kt)("p",null,"In the previous examples, the registration and login process were set up. Next, we need to check if the user is authenticated or not. This will be done by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.check")," method together with the ",(0,o.kt)("inlineCode",{parentName:"p"},"useIsAuthenticated")," hook."),(0,o.kt)("p",null,"By using ",(0,o.kt)("inlineCode",{parentName:"p"},"useIsAuthenticated")," hook, we can easily check if the user is authenticated or not. If they are, the user's profile will be shown. If not, the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Login />")," component will appear."),(0,o.kt)("p",null,"Additionally, in this example, we will implement ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.logout")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.getIdentity")," methods. We will call these methods with ",(0,o.kt)("inlineCode",{parentName:"p"},"useLogout")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"useGetIdentity")," hooks. These hooks make it easy to log out users and get their identity information."),(0,o.kt)(g,{mdxType:"IsAuthenticated"}),(0,o.kt)("p",null,"Refine also provides ",(0,o.kt)("inlineCode",{parentName:"p"},"<Auhtenticated />")," component to easily handle authentication state. You can use this component to protect your routes and conditionally render your components."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/core/components/authenticated"},"To learn more about the ",(0,o.kt)("inlineCode",{parentName:"a"},"<Auhtenticated />")," component, check out the reference page.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Authenticated } from "@refinedev/core";\n\nconst Page = () => {\n  return (\n    <Authenticated loading={<div>loading...</div>} fallback={<div>You cannot access this section</div>}>\n      <h1>Welcome to your dashboard</h1>\n    </Authenticated>\n  );\n};\n')),(0,o.kt)("h3",{id:"usage-with-data-provider-"},"Usage with data provider ",(0,o.kt)(Q,{id:"guides-concepts/data-fetching/",mdxType:"GuideBadge"})),(0,o.kt)("p",null,"After implementing the authentication process, we need to inform data provider about the authentication credentials. We can do this by sending the authentication credentials with the request. For example after obtaining the authentication token we can store it in cookies and sent it with on every request."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/guides-concepts/data-fetching/#authentication-"},"To learn more about the how to use authentication with data provider and working example, check out data fetching guide.")),(0,o.kt)("h2",{id:"error-handling"},"Error Handling"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.onError")," method is used to handle errors that occur during the http request."),(0,o.kt)("p",null,"Under the hood, Refine utilizes the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/hooks/auth/use-on-error"},(0,o.kt)("inlineCode",{parentName:"a"},"useOnError"))," hook for all data hooks. This means that when a promise is rejected from the ",(0,o.kt)("inlineCode",{parentName:"p"},"dataProvider")," or when you get an error response from the API, Refine automatically calls ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.onError")," by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"useOnError")," hook."),(0,o.kt)("p",null,"Let's say wan't to get product from the API with ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/hooks/data/use-one"},(0,o.kt)("inlineCode",{parentName:"a"},"useOne"))," hook. If the user is not authenticated, the API will return an error response. You can handle this error by implementing ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.onError")," method and Refine will automatically call this method when the error occurs."),(0,o.kt)(P,{mdxType:"OnError"}),(0,o.kt)("p",null,"Once you implement ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.onError")," method, you can call this method with ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/hooks/auth/use-on-error"},(0,o.kt)("inlineCode",{parentName:"a"},"useOnError"))," hook. This will help you to handle errors in single place."),(0,o.kt)("h2",{id:"ui-integrations"},"UI Integrations"),(0,o.kt)("h3",{id:"authpage-"},(0,o.kt)("inlineCode",{parentName:"h3"},"<AuthPage />")),(0,o.kt)("p",null,"While Refine itself is headless, it offers ",(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage />")," Integrations for popular UI libraries for:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/core/components/auth-page"},"Headless")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ui-integrations/ant-design/components/auth-page"},"Ant Design")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ui-integrations/material-ui/components/auth-page"},"Material UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ui-integrations/chakra-ui/components/auth-page"},"Chakra UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/ui-integrations/mantine/components/auth-page"},"Mantine"))),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},"<AuthPage />")," component you can easily handle authentication pages (login, register, update password, forgot password) and speed up your development process."),(0,o.kt)(ee,{wrapContent:!1,mdxType:"Tabs"},(0,o.kt)(te,{value:"Headless",mdxType:"TabItem"},(0,o.kt)(S,{mdxType:"HeadlessAuth"})),(0,o.kt)(te,{value:"Ant Design",mdxType:"TabItem"},(0,o.kt)(B,{mdxType:"AntdAuth"})),(0,o.kt)(te,{value:"Material UI",mdxType:"TabItem"},(0,o.kt)(U,{mdxType:"MaterialUIAuth"})),(0,o.kt)(te,{value:"Chakra UI",mdxType:"TabItem"},(0,o.kt)(F,{mdxType:"ChakraUIAuth"})),(0,o.kt)(te,{value:"Mantine",mdxType:"TabItem"},(0,o.kt)(z,{mdxType:"MantineAuth"}))),(0,o.kt)("h3",{id:"notification-"},"Notification ",(0,o.kt)(Q,{id:"api-reference/core/providers/notification-provider",mdxType:"GuideBadge"})),(0,o.kt)("p",null,"Refine provides a automatic notification system to notify users about the authentication errors. To use this feature, you need to pass ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/providers/notification-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"notificationProvider"))," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine />")," component."),(0,o.kt)("p",null,"Once you provide ",(0,o.kt)("inlineCode",{parentName:"p"},"notificationProvider"),", Refine will automatically notify users about the authentication errors on following auth provider methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"register"),(0,o.kt)("li",{parentName:"ul"},"login"),(0,o.kt)("li",{parentName:"ul"},"logout"),(0,o.kt)("li",{parentName:"ul"},"forgotPassword"),(0,o.kt)("li",{parentName:"ul"},"updatePassword")),(0,o.kt)("p",null,"For example, when you return ",(0,o.kt)("inlineCode",{parentName:"p"},"error")," object from the ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.login")," method, Refine will automatically notify users about the error."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Refine, AuthBindings } from "@refinedev/core";\nimport { handleLogin } from "./utils";\n\nexport const authProvider: AuthBindings = {\n  login: async ({ email, password }) => {\n    const { status } = handleLogin(email, password);\n    if (status === 418) {\n      return {\n        success: false,\n        error: { name: "Login Error", message: "Invalid credentials" },\n      };\n    }\n  },\n  ...\n};\n')),(0,o.kt)("h2",{id:"router-integrations-"},"Router Integrations ",(0,o.kt)(Q,{id:"guides-concepts/routing/",mdxType:"GuideBadge"})),(0,o.kt)("p",null,"Refine provides a automatic routing system to redirect users to the desired page after the authentication process. To use this feature, you need to pass ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/providers/router-provider"},(0,o.kt)("inlineCode",{parentName:"a"},"routerProvider"))," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Refine />")," component."),(0,o.kt)("p",null,"Once you provide ",(0,o.kt)("inlineCode",{parentName:"p"},"routerProvider"),", Refine will automatically redirect users to the desired page on following auth provider methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"register"),(0,o.kt)("li",{parentName:"ul"},"login"),(0,o.kt)("li",{parentName:"ul"},"logout"),(0,o.kt)("li",{parentName:"ul"},"onError"),(0,o.kt)("li",{parentName:"ul"},"forgotPassword"),(0,o.kt)("li",{parentName:"ul"},"updatePassword")),(0,o.kt)("p",null,"For example, when you return ",(0,o.kt)("inlineCode",{parentName:"p"},"redirectTo")," object from the ",(0,o.kt)("inlineCode",{parentName:"p"},"authProvider.register")," method, Refine will automatically redirect users to the desired page."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Refine, AuthBindings } from "@refinedev/core";\nimport { handleLogin } from "./utils";\n\nexport const authProvider: AuthBindings = {\n  register: async ({ email, password }) => {\n    const { status } = handleLogin(email, password);\n    if (status === 418) {\n      return {\n        success: false,\n        redirectTo: "/forgot-password",\n        error: { name: "Register Error", message: "User already exists" },\n      };\n    }\n  },\n  ...\n};\n')),(0,o.kt)("h2",{id:"auth-hooks"},"Auth hooks"),(0,o.kt)(L,{mdxType:"AuthHooks"}),(0,o.kt)("h2",{id:"oauth-integrations"},"OAuth Integrations"),(0,o.kt)("p",null,"Flexible architecture of auth provider allows you to integrate your ",(0,o.kt)("strong",{parentName:"p"},"own")," or ",(0,o.kt)("a",{parentName:"p",href:"#supported-auth-provider"},"third-party authentication systems")," into Refine."),(0,o.kt)("p",null,"You can use the following oAuth provider implementations as a starting point for your own auth provider or you can use them as it is."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/auth-google-login"},"Google")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/auth-auth0"},"Auth0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/auth-kinde"},"Kinde")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/auth-keycloak"},"Keycloak")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/data-provider-supabase"},"supabase")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/data-provider-strapi-v4"},"Strapi")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/data-provider-strapi-graphql"},"Strapi GraphQL")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/master/examples/with-nextjs-next-auth"},"Auth.js"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/core/providers/auth-provider"},"To learn more about the ",(0,o.kt)("inlineCode",{parentName:"a"},"authProvider")," interface, check out the reference page.")),(0,o.kt)("h2",{id:"supported-auth-providers"},"Supported Auth Providers"),(0,o.kt)(I.ZP,{mdxType:"AuthProviderExamplesLinks"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"For more information on how you can create your own auth providers, refer to the ",(0,o.kt)("a",{parentName:"p",href:"/docs/tutorial/understanding-authprovider/create-authprovider"},"Create a Auth Provider tutorial ","\u2192"))),(0,o.kt)("h2",{id:"authprovider-interface"},(0,o.kt)("inlineCode",{parentName:"h2"},"authProvider")," Interface"),(0,o.kt)("p",null,"To better understand the auth provider interface, we have created an example that demonstrates how the required methods are implemented. For more comprehensive and diverse examples, you can refer to the ",(0,o.kt)("a",{parentName:"p",href:"#supported-auth-providers"},"supported auth providers")," section."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/core/providers/auth-provider"},"To learn more about the ",(0,o.kt)("inlineCode",{parentName:"a"},"authProvider")," interface, check out the reference page.")),(0,o.kt)(A.default,{mdxType:"AuthProviderInterface"}))}re.isMDXComponent=!0}}]);