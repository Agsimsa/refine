"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[35964],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(r),m=a,h=d["".concat(p,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96118:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>b,frontMatter:()=>c,metadata:()=>s,toc:()=>l});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const c={title:"Breadcrumb",swizzle:!0},p=void 0,s={unversionedId:"ui-integrations/chakra-ui/components/breadcrumb/index",id:"ui-integrations/chakra-ui/components/breadcrumb/index",title:"Breadcrumb",description:"A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy. ` component was built with the Chakra UI Breadcrumb components using the useBreadcrumb` hook.",source:"@site/docs/ui-integrations/chakra-ui/components/breadcrumb/index.md",sourceDirName:"ui-integrations/chakra-ui/components/breadcrumb",slug:"/ui-integrations/chakra-ui/components/breadcrumb/",permalink:"/docs/ui-integrations/chakra-ui/components/breadcrumb/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/ui-integrations/chakra-ui/components/breadcrumb/index.md",tags:[],version:"current",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1705055083,formattedLastUpdatedAt:"Jan 12, 2024",frontMatter:{title:"Breadcrumb",swizzle:!0},sidebar:"mainSidebar",previous:{title:"<AuthPage />",permalink:"/docs/ui-integrations/chakra-ui/components/auth-page/"},next:{title:"<AutoSaveIndicator />",permalink:"/docs/ui-integrations/chakra-ui/components/auto-save-indicator/"}},u={},l=[{value:"Properties",id:"properties",level:2},{value:"breadcrumbProps",id:"breadcrumbprops",level:3},{value:"showHome",id:"showhome",level:3},{value:"meta",id:"meta",level:3},{value:"hideIcons",id:"hideicons",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3}],d=(m="PropsTable",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var m;const h={toc:l};function b(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)("wrapper",o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},h,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy. ",(0,n.kt)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component was built with the Chakra UI ",(0,n.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/components/breadcrumb/usage"},"Breadcrumb")," components using the ",(0,n.kt)("a",{parentName:"p",href:"/docs/core/hooks/utilities/use-breadcrumb"},(0,n.kt)("inlineCode",{parentName:"a"},"useBreadcrumb"))," hook."),(0,n.kt)("admonition",{title:"Good to know",type:"simple"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"You can swizzle this component with the ",(0,n.kt)("a",{parentName:"p",href:"/docs/packages/list-of-packages"},(0,n.kt)("strong",{parentName:"a"},"Refine CLI"))," to customize it.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"In the earlier versions of Refine, ",(0,n.kt)("inlineCode",{parentName:"p"},"<Refine>")," component had accepted ",(0,n.kt)("inlineCode",{parentName:"p"},"DashboardPage")," which could be used to add an index page to your app. With the changes in ",(0,n.kt)("inlineCode",{parentName:"p"},"routerProvider")," API of Refine, ",(0,n.kt)("inlineCode",{parentName:"p"},"DashboardPage")," is deprecated. You can now define an index route yourself manually with your router package.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"In earlier versions, the home icon in the ",(0,n.kt)("inlineCode",{parentName:"p"},"Breadcrumb")," was created by the ",(0,n.kt)("inlineCode",{parentName:"p"},"DashboardPage"),", now it is rendered if you define a an action route as ",(0,n.kt)("inlineCode",{parentName:"p"},"/")," in any one of your resources. It will be rendered with the home icon regardless of the current route. You can also hide the home icon by setting ",(0,n.kt)("inlineCode",{parentName:"p"},"showHome")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),".")))),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"breadcrumbprops"},"breadcrumbProps"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component uses the Chakra UI ",(0,n.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/components/breadcrumb/usage"},"Breadcrumb")," component so it can be configured with the ",(0,n.kt)("inlineCode",{parentName:"p"},"breadcrumbProps")," property."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/chakra-ui";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List\n      // highlight-next-line\n      breadcrumb={<Breadcrumb breadcrumbProps={{ separator: "-" }} />}\n    >\n      ...\n    </List>\n  );\n};\n')),(0,n.kt)("h3",{id:"showhome"},"showHome"),(0,n.kt)("p",null,"If you have a page with route ",(0,n.kt)("inlineCode",{parentName:"p"},"/"),", it will be used as the root of the hierarchy and shown in the ",(0,n.kt)("inlineCode",{parentName:"p"},"Breadcrumb")," with a home icon. To hide the root item, set ",(0,n.kt)("inlineCode",{parentName:"p"},"showHome")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"false.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/chakra-ui";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List\n      // highlight-next-line\n      breadcrumb={<Breadcrumb showHome={true} />}\n    >\n      ...\n    </List>\n  );\n};\n')),(0,n.kt)("h3",{id:"meta"},"meta"),(0,n.kt)("p",null,"If your routes has additional parameters in their paths, you can pass the ",(0,n.kt)("inlineCode",{parentName:"p"},"meta")," property to the ",(0,n.kt)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component to use them while creating the paths and filling the parameters in the paths. By default, existing URL parameters are used. You can use ",(0,n.kt)("inlineCode",{parentName:"p"},"meta")," to override them or add new ones."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/chakra-ui";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List\n      // highlight-next-line\n      breadcrumb={<Breadcrumb meta={{ authorId: "123" }} />}\n    >\n      ...\n    </List>\n  );\n};\n')),(0,n.kt)("h3",{id:"hideicons"},"hideIcons"),(0,n.kt)("p",null,"If you don't want to show the resource icons on the breadcrumb, you can set ",(0,n.kt)("inlineCode",{parentName:"p"},"hideIcons")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/chakra-ui";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List\n      // highlight-next-line\n      breadcrumb={<Breadcrumb hideIcons />}\n    >\n      ...\n    </List>\n  );\n};\n')),(0,n.kt)("h2",{id:"api-reference"},"API Reference"),(0,n.kt)("h3",{id:"properties-1"},"Properties"),(0,n.kt)(d,{module:"@refinedev/chakra-ui/Breadcrumb",mdxType:"PropsTable"}))}b.isMDXComponent=!0}}]);