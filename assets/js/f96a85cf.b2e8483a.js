"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[27934],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},60572:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>u,toc:()=>p});r(67294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const c={title:"Okta Auth Provider"},l="Okta Auth Provider",u={unversionedId:"enterprise-edition/okta/index",id:"enterprise-edition/okta/index",title:"Okta Auth Provider",description:"Okta is an enterprise-grade identity management service. Refine's integration of Okta's authentication services allows you to easily add Okta services to your application.",source:"@site/docs/enterprise-edition/okta/index.md",sourceDirName:"enterprise-edition/okta",slug:"/enterprise-edition/okta/",permalink:"/docs/enterprise-edition/okta/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/master/documentation/docs/enterprise-edition/okta/index.md",tags:[],version:"current",lastUpdatedBy:"Alican Erdurmaz",lastUpdatedAt:1703144254,formattedLastUpdatedAt:"Dec 21, 2023",frontMatter:{title:"Okta Auth Provider"},sidebar:"mainSidebar",previous:{title:"Community Data Providers",permalink:"/docs/packages/data-providers/community-data-providers/"},next:{title:"3.x.x to 4.x.x",permalink:"/docs/migration-guide/3x-to-4x"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}],d=(m="InstallPackagesCommand",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var m;const f={toc:p};function h(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)("wrapper",a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},f,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"okta-auth-provider"},"Okta Auth Provider"),(0,n.kt)("p",null,"Okta is an enterprise-grade identity management service. Refine's integration of Okta's authentication services allows you to easily add Okta services to your application."),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"This package is included in Refine's Enterprise Edition. To learn more about Refine's Enterprise Edition, please ",(0,n.kt)("a",{parentName:"p",href:"https://s.refine.dev/okta-enterprise"},"contact us"),"."),(0,n.kt)(d,{args:"@refinedev-ee/okta @okta/okta-auth-js",mdxType:"InstallPackagesCommand"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".npmrc"',title:'".npmrc"'},"# A registry with the auth token should be added for the @refinedev-ee scope\n@refinedev-ee:registry=https://registry.npmjs.org/\n//registry.npmjs.org/:_authToken=$NPM_TOKEN\n"))),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"First, you'll need to create an ",(0,n.kt)("inlineCode",{parentName:"p"},"OktaAuth")," instance, then use the ",(0,n.kt)("inlineCode",{parentName:"p"},"createAuthProvider")," method to create an auth provider. You can then pass the auth provider to the ",(0,n.kt)("a",{parentName:"p",href:"/docs/core/refine-component"},(0,n.kt)("inlineCode",{parentName:"a"},"<Refine />"))," component."),(0,n.kt)("p",null,"The example below uses ",(0,n.kt)("a",{parentName:"p",href:"/docs/router-integrations/react-router"},(0,n.kt)("inlineCode",{parentName:"a"},"react-router-dom"))," for routing, but all ",(0,n.kt)("a",{parentName:"p",href:"/docs/guides-concepts/routing"},"router integrations")," of Refine will work the same way."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import React from "react";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router-dom";\n\nimport OktaAuth from "@okta/okta-auth-js";\n\nimport { Authenticated, AuthPage, Refine, WelcomePage } from "@refinedev/core";\nimport routerProvider, { CatchAllNavigate, NavigateToResource } from "@refinedev/react-router-v6";\nimport { createAuthProvider, OktaCallback } from "@refinedev-ee/okta";\n\nconst oktaAuth = new OktaAuth({\n  issuer: "https://{yourOktaDomain}/oauth2/default",\n  clientId: "{clientId}",\n  // A redirect uri is set to the current host + \'/login/callback\'\n  // We\'ll handle this route using the `<OktaCallback />` component.\n  // It will complete the auth process and handle the redirect.\n  redirectUri: window.location.origin + "/login/callback",\n  scopes: ["openid", "email", "profile", "offline_access"],\n  pkce: true,\n  devMode: true,\n});\n\nconst authProvider = createAuthProvider(oktaAuth);\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n      <Refine\n        routerProvider={routerProvider}\n        // We\'re passing the auth provider to the `<Refine />` component.\n        authProvider={authProvider}\n      >\n        <Routes>\n          <Route\n            element={\n              <Authenticated key="authenticated-inner" fallback={<CatchAllNavigate to="/login" />}>\n                <Outlet />\n              </Authenticated>\n            }\n          >\n            <Route index element={<WelcomePage />} />\n          </Route>\n          <Route\n            element={\n              <Authenticated key="authenticated-outer" fallback={<Outlet />}>\n                <NavigateToResource />\n              </Authenticated>\n            }\n          >\n            <Route path="/login" element={<AuthPage type="login" hideForm providers={[{ name: "Okta" }]} />} />\n            {/* We\'re mounting `<OktaCallback />` at `/login/callback` route to complete our authentication process. */}\n            <Route path="/login/callback" element={<OktaCallback oktaAuth={oktaAuth} />} />\n          </Route>\n        </Routes>\n      </Refine>\n    </BrowserRouter>\n  );\n};\n')))}h.isMDXComponent=!0}}]);